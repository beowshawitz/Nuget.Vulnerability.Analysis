using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Nuget.Vulnerability.Analysis.Core.Inbound;
using Nuget.Vulnerability.Analysis.Core.Outbound;
using System.Net.Http.Json;

namespace Nuget.Vulnerability.Analysis.Core.Clients
{
	public class NugetResultsClient
	{
		private readonly HttpClient _httpClient;
		private readonly ILogger<NugetResultsClient> _logger;
		private readonly IConfiguration _configuration;

		public NugetResultsClient(HttpClient httpClient, ILogger<NugetResultsClient> logger, IConfiguration configuration)
		{
			_httpClient = httpClient;
			_logger = logger;
			_configuration = configuration;
		}

		public async Task<AnalysisResult?> AnalyzeAssemblies(AnalysisRequest req)
		{
			var response = await _httpClient.PostAsJsonAsync(_configuration["NugetService:ApiRoute"], req);
			if (response.IsSuccessStatusCode)
			{
				return await response.Content.ReadFromJsonAsync<AnalysisResult>();
			}
			_logger.LogError($"Http Status: {response.StatusCode}{Environment.NewLine}Http Message: {await response.Content.ReadAsStringAsync()}");
			return null;
		}
	}
}
