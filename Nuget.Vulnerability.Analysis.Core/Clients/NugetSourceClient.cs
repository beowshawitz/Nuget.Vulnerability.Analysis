using Microsoft.Extensions.Logging;
using Nuget.Vulnerability.Analysis.Core.Processing;
using System.Net;
using System.Net.Http.Json;

namespace Nuget.Vulnerability.Analysis.Core.Clients
{
	public class NugetSourceClient
	{
		private readonly HttpClient _httpClient;
		private readonly ILogger<NugetSourceClient> _logger;

		public NugetSourceClient(HttpClient httpClient, ILogger<NugetSourceClient> logger)
		{
			_httpClient = httpClient;
			_logger = logger;
		}

		public async Task<Dictionary<string, List<NugetVulnerability>>> GetNugetSourceData(string vulnerabilityUri)
		{
			HttpResponseMessage response = await _httpClient.GetAsync(vulnerabilityUri);
			if (response.IsSuccessStatusCode && !response.StatusCode.Equals(HttpStatusCode.NoContent))
			{
				return await response.Content.ReadFromJsonAsync<Dictionary<string, List<NugetVulnerability>>?>();
			}
			_logger.LogError($"Http Status: {response.StatusCode}{Environment.NewLine}Http Message: {await response.Content.ReadAsStringAsync()}");
			return new Dictionary<string, List<NugetVulnerability>>();
		}
	}
}
