@page
@model IndexModel
@{
	ViewData["Title"] = "Assembly Lookup";
}
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
	<symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
		<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
	</symbol>
	<symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
		<path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
	</symbol>
	<symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
		<path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
	</symbol>
</svg>
<h1>Assembly Lookup</h1>
<hr />
<div class="row">
	<div class="col">
		<p>
			Where do CVE/GHSA come from?
			NuGet gets its CVE/GHSA information directly from the centralized GitHub Advisory Database. The database provides two main listings of vulnerabilities:
			<ul>
				<li>A CVE is Common Vulnerabilities and Exposures. This is a list of publicly disclosed computer security flaws.</li>
				<li>A GHSA is a GitHub Security Advisory. GitHub is a CVE Numbering Authority (CNA) and is authorized to assign CVE identification numbers.</li>
			</ul>
			Please see this <a href="https://devblogs.microsoft.com/nuget/how-to-scan-nuget-packages-for-security-vulnerabilities/" target="_blank">article</a> for more information
		</p>
	</div>
</div>
<hr />
<form method="post">
	<div class="row my-3">
		<div class="col-6">
			<label asp-for="AssemblyJson" class="form-label"></label>
			<textarea asp-for="AssemblyJson" class="form-control" rows="10"></textarea>
			<span asp-validation-for="AssemblyJson" class="text-danger"></span>
		</div>
		<div class="col-6">
			<h3>Example Json Packets</h3>
			<h4 class="mt-4">One Assembly Only</h4>
			<code>
				{
					"assemblies":[
						{
						"name":"microsoft.aspnetcore.all",
						"version":"2.1.5"
						}
					]
				}
			</code>
			<h4 class="mt-4">Two Or More Assemblies</h4>
			<code>
				{
					"assemblies":[
						{
						"name":"microsoft.aspnetcore.all",
						"version":"2.1.5"
						},
						{
						"name":"dotnetnuke.core",
						"version":"0.7.3"
						},
						{
						"name":"microsoft.aspnetcore.app.runtime.linux-arm",
						"version":"3.1.0"
						}
					]
				}
			</code>
		</div>
	</div>
	<div class="row">
		<div class="col">
			<button id="submitLookup" type="submit" class="btn btn-primary">Lookup</button>
		</div>
	</div>
	<div class="row mt-3">
		<div class="col">
			@if (!string.IsNullOrEmpty(@Model.ErrorMessage))
			{
				<div class="alert alert-danger d-flex align-items-center" role="alert">
					<svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
					<div>
						@Model.ErrorMessage
					</div>
				</div>
			}
		</div>
	</div>
</form>
<hr />
<h3>Vulnerability Results</h3>
<div class="row my-3">
	<div class="col">
		<div class="accordion" id="accordionPanelsStayOpenExample">
			@for (int i = 0; i < Model.VulnerableAssemblies.Count(); i++)
			{
				var heading = "panelsStayOpen-heading" + i;
				var collapse = "panelsStayOpen-collapse" + i;
				<div class="accordion-item">
					<h2 class="accordion-header" id="@heading">
						<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@collapse" aria-expanded="true" aria-controls="@collapse">
							@Model.VulnerableAssemblies[i].Name
						</button>
					</h2>
					<div id="@collapse" class="accordion-collapse collapse show" aria-labelledby="@heading">
						<div class="accordion-body">
							<div class="row">
								<table class="table table-striped table-hover table-sm">
									<thead>
										<tr class="table-secondary">
											<th class="col-4">Severity</th>
											<th class="col-4">Version</th>
											<th class="col-4">Reference</th>
										</tr>
									</thead>
									<tbody>
										@if (Model.VulnerableAssemblies[i].Vulnerabilities != null)
										{
											@for (int j = 0; j < Model.VulnerableAssemblies[i].Vulnerabilities.Count(); j++)
											{
												<tr>
													<td class="align-middle">@Model.VulnerableAssemblies[i].Vulnerabilities[j].Severity</td>
													<td class="align-middle">@Model.VulnerableAssemblies[i].Vulnerabilities[j].Versions</td>
													<td>
														<a href="@Model.VulnerableAssemblies[i].Vulnerabilities[j].Url" target="_blank">@Model.VulnerableAssemblies[i].Vulnerabilities[j].Url</a>
													</td>
												</tr>
											}
										}
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
		@if (@Model.ExecutedLookup && !@Model.HasVulnerabilities)
		{
			<div class="alert alert-success d-flex align-items-center" role="alert">
				<svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
				<div>
					There were no vulnerabilities identified in the request. 
				</div>
			</div>
		}
	</div>
</div>

@section scripts {
<script type="text/javascript">
		$(document).ready(function () {
			$("#submitLookup").click(function () {
				$(this).text("Loading...").prepend("<span class=\"spinner-grow spinner-grow-sm mx-2\"></span>").addClass("disabled");
			});
		});
</script>
}
