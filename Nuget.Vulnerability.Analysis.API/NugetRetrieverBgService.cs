
using Microsoft.Extensions.Caching.Memory;
using Nuget.Vulnerability.Analysis.Core.Clients;
using Nuget.Vulnerability.Analysis.Core.Processing;

namespace Nuget.Vulnerability.Analysis.API
{
	/// <summary>
	/// Executed in the startup pipeline once to preload the Nuget data for use by API calls. Otherwise, the user would be forced to wait while it retrieves it on demand.
	/// </summary>
	public class NugetRetrieverBgService : BackgroundService
	{
		private readonly NugetVulnerabilityCache _nugetVulnerabilityCache;
		private readonly NugetSourceClient _nugetSourceClient;
		private readonly IConfiguration _configuration;

		public NugetRetrieverBgService(IConfiguration configuration, IMemoryCache memoryCache, NugetSourceClient nugetSourceClient)
		{
			_configuration = configuration;
			_nugetVulnerabilityCache = new NugetVulnerabilityCache(memoryCache);
			_nugetSourceClient = nugetSourceClient;
		}

		protected async override Task ExecuteAsync(CancellationToken stoppingToken)
		{
			try
			{
				string? vulnerabilityUri = _configuration.GetSection("NugetResources:VulnerabilityBase").Value;
				await _nugetVulnerabilityCache.LoadNugetVulnerabilityDataAsync(_nugetSourceClient, vulnerabilityUri);
			}
			catch (Exception ex)
			{
				ApplicationException appEx = new ApplicationException("Unable to retrieve the vulnerability data from Nuget.", ex);
				throw appEx;
			}
		}
	}
}
